////////////////////////////
//     CSS3 ANIMATION    //
//////////////////////////

//basic animation
@mixin M-animate($settings: 0.5s, $ease: ease-in-out, $var: all){
	@include M-gt-ie8 {
	    -webkit-transition: $var $settings $ease;
	    transition:  $var $settings $ease;
	}
}
//requires this usage if used because of the IE test:
//@extend %animate !optional;
%animate { @include M-animate; }
%animate-hover { @include M-animate(0.2s,ease-out); }//hover requires faster animation to feel responsive
%animate-long { @include M-animate(1s); }

//Removes animation from elements with animation set
@mixin M-anti-animate($important: true) {
	@include M-gt-ie8 {
		@if ($important == true){
		    -webkit-transition: none !important;
		    transition: none !important;
		} @else {
		    -webkit-transition: none;
		    transition: none;
		}
	}
}
//requires this usage if used because of the IE test:
//@extend %anti-animate !optional;
%anti-animate { @include M-anti-animate; }

///////////////////////////////
//	Keyframe animations		//
/////////////////////////////

//analyses the animation set and generates the css rules for each key frame
@mixin M-kf-animation-loop ($animation_set){
	@for $frame from 1 through length($animation_set) {
		$keyframe: nth(nth($animation_set,$frame),2);
		$css: nth(nth($animation_set,$frame),1);

	 	#{$keyframe} {
			@for $rule from 1 through length($css) {
				$attribute: nth(nth($css, $rule),1);
				$value: nth(nth($css, $rule),2);
				@if ($attribute == rotate){
					@include M-rotate($value)
				} @else if ($attribute == scale) {
					@include M-scale($value);
				} @else {
					#{$attribute} : $value;
				}
			}
		}
    }
};

//Sets up the key-frames for the animation
//Use this on it's own to set up an animation that is shared across multiple elements or multiple timings
@mixin M-kf-definition($animation_name, $animation_set) {
	@include M-gt-ie8 {
		@-webkit-keyframes #{$animation_name} {
			//@include M-keyframes-loop($keyframes, $rules);
			@include M-kf-animation-loop($animation_set);
		}
		@keyframes #{$animation_name} {
			@include M-kf-animation-loop($animation_set);
		}
	}
}

//Defines how the animation plays out
//use this on it's own to call on animations made with the kf-definition mixin
//This mixin allows you to use the same animation set as another element but give different timings
@mixin M-kf-predefined($animation_name, $settings: 1s, $loops: infinite, $ease: linear){
	@include M-gt-ie8 {
		-webkit-animation: $animation_name $settings $loops $ease; //* Safari 4+ */
		animation:         $animation_name $settings $loops $ease; //* IE 10+, Fx 29+ */

	}
}

//Ties all the key-frame animation mixins together into a single easy to use mixin
@mixin M-kf-animate($animation_name, $animation_set, $settings: 1s, $loops: infinite, $ease: linear) {
		@include M-kf-definition($animation_name, $animation_set);
		@include M-kf-predefined($animation_name, $settings, $loops, $ease);
}


//EXAMPLE USAGE:

//$example_animation:
//	(
//		(margin, 10px 20px),
//		(opacity, 0)
//	) 0%,
//	(
//		(margin, 0),
//		(opacity, 1)
//	) 50%,
//	(
//		(margin, 10px 20px),
//		(opacity, 0)
//	) 100%
//;

//#element {
//	@include M-kf-animate(example_animation, $example_animation, 3s);
//}


/////////////////////////////////
//	Generate Equal key frames //
///////////////////////////////

//calculates the percentages for the key frame generator
@function keyframe_percent($index, $attribute_list){
	@return (100% / length($attribute_list)) * $index;
}

//generates evenly spaced key frames for an animation set
@function kf_generator($animation_set){
	$animation:	((nth($animation_set, 1)), 0%),;

	@for $i from 1 through (length($animation_set)) {
		$animation_keyframe:
			(
				//adds the attributes to the keyframe
				(nth($animation_set, $i)),

				//determines at what point in the animation the attributes take effect
				(keyframe_percent(($i),$animation_set))
			)
		;

		$animation: append($animation, $animation_keyframe, comma);
	}
	//@debug $animation; //uncomment if having issues with the generator
	@return ($animation);
}

//----------------------------------

//EXAMPLE USAGE (single attribute):
//(sorry about the ugliness but it works)

//$example_animation:
//	((top, 0px),),
//	((top, -5px),),
//	((top, 0px),),
//;

//#element {
//		@include M-kf-animate(
//			example_animation,
//			kf_generator($example_animation),
//			10s
//		);
//}

//-----------------------------

//EXAMPLE USAGE (multi attribute):

//$example_animation:
//	(
//		(top, 0px),
//		(left, 0px)
//	),(
//		(top, -5px),
//		(left, -5px)
//	),(
//		(top, 0px),
//		(left, 0px)
//	)
//;

//#element {
//		@include M-kf-animate(
//			example_animation,
//			kf_generator($example_animation),
//			10s
//		);
//}
