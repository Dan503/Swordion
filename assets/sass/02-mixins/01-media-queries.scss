// ******************************************************\
// * DEVICE WIDTHS
// ******************************************************/
$fix-mqs: false !default;

$mediaQuery: ();


@function calculateMQ ($range, $setting1: null, $setting2: null){

	$mediaString: '';

	$errorMessage: "first width setting (#{$setting1}) must be higher than the second width setting (#{$setting2})";

	@if (($setting2 != null) and ($setting1 < $setting2)){
		@error $errorMessage;
	}

	// if has both min and max-widths
	// if has both min and max-widths
	@if ($setting2 != null) {

		@if ($range == 'inside') {
			$mediaString:'screen and (max-width: #{$setting1}) and (min-width: #{$setting2 + 1})';

			//@debug $mediaQuery;

		} @else if ($range == 'outside') {
			$mediaString:'not screen and (max-width: #{$setting1}) and (min-width: #{$setting2 + 1})';
		}

	} @else {// else output min or max width

		@if ($range == 'min') {
			$mediaString:'screen and (min-width: #{$setting1 + 1})';

		} @else if ($range == 'max') {
			$mediaString:'screen and (max-width: #{$setting1})';
		}
	}

	@return $mediaString;
}

@function ieMQtest ($range, $width1: null, $width2: null) {


	@if ($lt-ie9){
		$test: (
			(($fix-mqs >= $width1) and ($range == 'min')) or
			(($width2 != null) and ($fix-mqs >= $width1) and ($range == 'outside')) or
			(($width2 != null) and ($fix-mqs <= $width1) and ($fix-mqs >= $width2) and ($range == 'inside'))
		);

		@return $test;
	} @else {
		@return false;
	}
}

@mixin M-mq($range, $setting1: null, $setting2: null) {

	@if (length($range) > 1) {

		//Uses this functionality if using a single level MQ variable
		//eg:
		//$MQ-example--single: inside, bp('large'), bp('tablet'));
		//@include M-mq($MQ-example--single){}
		@if (type-of(nth($range,1)) == string){

			$newRange: nth($range,1);
			$newWidth1: nth($range,2);
			$newWidth2: null;
			@if (length($range) == 3){
				$newWidth2: nth($range,3);
			}


			@if (ieMQtest($newRange, $newWidth1, $newWidth2)) {
				@content;
			} @else if ($lt-ie9 == false) {
				@media #{calculateMQ($newRange, $newWidth1, $newWidth2)} {
					@content;
				}
			}

		//Uses this functionality if using a multi level MQ variable
		//eg:
		//$MQ-example--multiple:
		//	(inside, bp('large'), bp('tablet')),
		//	(min, bp('page'))
		//;
		//@include M-mq($MQ-example--multiple){}
		} @else {
			$mediaQuery: ();

			@each $mqSet in $range {

				$newRange: nth($mqSet,1);
				$newWidth1: nth($mqSet,2);
				$newWidth2: null;
				@if (length($mqSet) == 3){
					$newWidth2: nth($mqSet,3);
				}

				@if (($lt-ie9 == true) and (ieMQtest($newRange, $newWidth1, $newWidth2))) {
					@content;
				} @else {
					$mediaQuery: append($mediaQuery, calculateMQ($newRange, $newWidth1, $newWidth2), 'comma');
				}
			}//end @each

			@if ($lt-ie9 == false) {
				@media #{$mediaQuery} {
					@content;
				}
			}
		}

	//Uses this functionality if placing MQ data inline
	//eg:
	//@include M-mq(inside, bp('large'), bp('tablet'));
	} @else {

		@if (ieMQtest($range, $setting1, $setting2)) {
			@content;
		} @else {
			@if ($lt-ie9 == false) {
				@media #{calculateMQ($range, $setting1, $setting2)} {
					@content;
				}
			}
		}

	}
}


@mixin M-retina {
	@if ($lt-ie9 == false) {
	  	@media
			only screen and (-webkit-min-device-pixel-ratio: 2),
			only screen and (        min-device-pixel-ratio: 2),
			only screen and (           min-resolution: 192ppi),
			only screen and (            min-resolution: 2dppx) {
				@content;
		}
	}
}

//**********************************\
//	Resolution specific elements
//*********************************/

$BP-mobile: bp('mobile');
$BP-tablet: bp('tablet');

@mixin M-mobileOnly {
	@include M-mq(min, $BP-mobile){
		display: none!important;
	}
}

@mixin M-tabletOnly {
	@include M-mq(outside, $BP-tablet, $BP-mobile){
		display: none!important;
	}
}

@mixin M-desktopOnly {
	@include M-mq(max,$BP-tablet){
		display: none!important;
	}
}

@mixin M-nonMobile {
	@include M-mq(max, $BP-mobile){
		display: none!important;
	}
}

@mixin M-nonTablet {
	@include M-mq(inside, $BP-tablet, $BP-mobile){
		display: none!important;
	}
}

@mixin M-nonDesktop {
	@include M-mq(min, $BP-tablet){
		display: none!important;
	}
}


// ******************************************************\
// * IE SPECIFIC RULES
// ******************************************************/

//IE 8 and 9
@mixin M-lt-ie10 {
    @if ($lt-ie10) {
        @content;
    }
}

//IE8
@mixin M-lt-ie9 {
    @if ($lt-ie9) {
        @content;
    }
}

//IE10 + (modern)
@mixin M-gt-ie9 {
    @if ($lt-ie10 == false) {
        @content;
    }
}

//IE9 +
@mixin M-gt-ie8 {
    @if ($lt-ie9 == false) {
        @content;
    }
}




// ******************************************************\
// * PRINT
// ******************************************************/
@mixin M-print {
	@media print {
		@content;
	}
}