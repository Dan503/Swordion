
//The prefixes applied to display:flex attributes
$flexPrefixes: ms webkit;


//shortcut for displaying as Flexbox
@mixin M-flex {
	display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
	display: -ms-flexbox;      /* TWEENER - IE 10 */
	display: -webkit-flex;     /* NEW - Chrome */
	display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
}
%flex { @include M-flex; }

//control how the flexbox wraps
@mixin M-flexWrap($isEnabled:true){
	@if ($isEnabled == true){
		@include M-prefix(flex-wrap, wrap, $flexPrefixes);
	} @else if ($isEnabled == 'reverse'){
		@include M-prefix(flex-wrap, wrap-reverse, $flexPrefixes);
	} @else if ($isEnabled == false) {
		@include M-prefix(flex-wrap, nowrap, $flexPrefixes);
	} @else {
		@error '"#{$isEnabled}" is an invalid property for M-flexWrap. Valid properties are: true, false, and reverse';
	}
}
%flexWrap { @include M-flexWrap; }


//verticaly align inner content
@mixin M-flexValign {
	@include M-flex;
	@include M-prefix(flex-direction,column, $flexPrefixes);
	@include M-prefix(justify-content,center, $flexPrefixes);
}
%flexValign {
	@include M-flexValign
}

//Flexbox doesn't like pixel widths.
//This mixin allows an element to stay a constant width even when flex grow is applied to it.
//The siblings of this element will grow/shrink to fit to fill the container  
@mixin M-flexForceWidth($width){
	width: auto;
	max-width: $width;
	min-width: $width;
}