
/*================================================*\
	THE TOOL KIT
//----------------------------------------------------
//	This file holds one off classes designed to be
//	used globally for a specific function
\*================================================*/

//remove dot points from a list
.noDots { list-style: none; margin: 0; padding: 0; }

//Image Replacement. For when you are using a sprite or icon on an element and you don't want the text to appear
.ir { @extend %ir;
	br {display:none;}
}

//Image Replacement 2. Good for submit buttons if you need IE7 compatibility
.ir2 { @extend %ir2; }

//prevent text wrapping
.noWrap { white-space: nowrap; }

//elipsis (...) added to end of cut off text (single line only)
.elipsis { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }

//hide element on page load
.hide { display:none; }

//HIDE the element if JS is ENABLED,
//SHOW the element if JS is DISABLED
.jsHide {
	display: none;
	.no-js & { display: block;  }
}

//visually hidden element so that screen readers can see it but normal users cant
.vh { @extend %vh; }

//counters the visually hidden styles
.anti-vh { @extend %anti-vh }

//a less favorable version of visually hidden since browsers still have to render it way off screen
.offScreen { position: absolute; left: -999em; }

//Force a non-floating parent element to contain it's floating child elements
.clearFix { @extend %clearfix; }

//simple clear classes for clearing floats
.clear { clear: both;
	&-left { clear: left; }
	&-right { clear: right; }
}


//both vertically and horizontally center align an element that has fixed height and width
.centered {
	@extend %centered;

//.centered--v | only VERTICALLY center align an element that has fixed height and width
	&--v { @extend %centered--v; }

//.centered--h | only HORIZONTALLY center align an element that has fixed height and width
	&--h { @extend %centered--v; }
}

//	Resolution specific elements
.mobileOnly { @extend %mobile-only; }
.tabletOnly { @extend %tablet-only; }
.desktopOnly { @extend %desktop-only; }
.nonMobile { @extend %non-mobile; }

//animate an element when it's css changes
.animate {
	@include M-animate(0.5s);
	&--fast { @include M-animate(0.2s); }//useful for hover states
	&--slow { @include M-animate(1s); }
}


//A link that only appears when the user focuses on it
.skipLink {
	@extend %vh;
	&:active,:focus { @extend %anti-vh }
}

//remove default styling (good for submit buttons)
.appearanceNone { @extend %appearanceNone; }
