/********* Custom select boxes **********/

$C-display-border: CG-prominence(1);

%hoverState { background-color: $CG-input-focus; }

select {
	cursor: pointer;
	option { font-weight: 100; }
	.js & { @include MG-opacity(0); }
	&:hover + .styledSelect-display { @extend %hoverState; }
}

.styledSelect {
	&-JS {
		@extend %inputStyling;
		width: 100%;
		padding: 0;
		position: relative;
		overflow: hidden;
		background-color: #fff;
		cursor: pointer;
		z-index: 0;
		padding-right: 30px;
		@include MG-inline-block;

		//add the arrow with a css triangle
		@include MG-before {
			@include MG-tri(down, CG-prominence(1), 7px);
			@include MG-centered(v);
			right: 11px;
		}

		//adding arrow with an icon instead
		/*@include MG-icon('arrow--down', CG-prominence(1), 5px, 30px){
			@include MG-centered(v);
			right: 0;
			z-index: 1;
		}*/

		select {
			@extend %appearanceNone;
			width: 100%;
			height: 100%;
			position: absolute;
			@include MG-opacity(0);
			border: none!important;
			z-index: 2;
			&:focus + .styledSelect__display-JS { background: $CG-input-focus; }
		}

		&.#{$errorClass} {
			background: $CB-red-pale!important;
			border-color: $CB-red-dim;
			&:before {
				border-color: $CG-error-border;
				background-color: $CG-error-border;
				color: $CG-error-bg;
			}
			.styledSelect__display-JS { color: $CG-error-text; }

			&:hover .styledSelect__display-JS,
			select:hover + .styledSelect__display-JS  { background: $CG-error-bg--hover; }
		}

		&:hover .styledSelect__display-JS {
			@extend %hoverState;
		}
	}

	&__display-JS {
		@include MG-animate(0.25s,$attributes:background);
		padding: 5px 0 5px 10px;
		color: #000;
		position: relative;
		z-index: 0;
		display: block;
		border-right: 1px solid rgba($C-display-border,0.5);
	}
}
