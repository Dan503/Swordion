
//check if a value exists in a list
@function contains($list,$var) {
    @return (false == index($list, $var));
}


//Functions taken from: http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/

//SELECT FIRST AND LAST VALUES IN A LIST
//example:
//$list: a, b, c, d, e, f;
//$first: first($list);  =  a
//$last: last($list);    =  f
@function first($list) {
  @return nth($list, 1);
}
//select last value in a list
@function last($list) {
  @return nth($list, length($list));
}

//FIND THE INDEX OF THE LAST OF A CERTAIN VALUE IN A LIST
//example
//$list: a, b, c, a, d, e, a, f;
//$first-index: index($list, a);      =  1
//$last-index: last-index($list, a);  =  7
//$middle-index: last-index($list, a, 6) = 4
@function last-index($list, $value, $index: length($list)) {
  $value-index: null;

  @for $i from 1 through $index {
    @if nth($list, $i) == $value {
      $value-index: $i;
    }
  }

  @return $value-index;
}

//SLICING A LIST
//Example:
//$list: a, b, c, d, e, f;
//$new-list: slice($list, 3, 5);  =  c, d, e

@function slice($list, $start: 1, $end: length($list)) {
  $result: null;

  @if type-of($start) != number or type-of($end) != number {
    @warn "Either $start or $end are not a number for `slice`.";
  }

  @else if $start > $end {
    @warn "The start index has to be lesser than or equals to the end index for `slice`.";
  }

  @else if $start < 1 or $end < 1 {
    @warn "List indexes must be non-zero integers for `slice`.";
  }

  @else if $start > length($list) {
    @warn "List index is #{$start} but list is only #{length($list)} item long for `slice`.";
  }

  @else if $end > length($list) {
    @warn "List index is #{$end} but list is only #{length($list)} item long for `slice`.";
  }

  @else {
    $result: ();

    @for $i from $start through $end {
      $result: append($result, nth($list, $i));
    }
  }

  @return $result;
}
